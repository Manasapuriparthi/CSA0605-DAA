class BinaryMatrix:
    def _init_(self, matrix):
        self.matrix = matrix

    def get(self, row, col):
        return self.matrix[row][col]

    def dimensions(self):
        return [len(self.matrix), len(self.matrix[0])]

def leftmost_column_with_one(binaryMatrix):
    rows, cols = binaryMatrix.dimensions()
    row, col = 0, cols - 1
    leftmost_col = -1
    
    while row < rows and col >= 0:
        if binaryMatrix.get(row, col) == 1:
            leftmost_col = col
            col -= 1
        else:
            row += 1
    
    return leftmost_col

mat1 = [[0,0],[1,1]]
binaryMatrix1 = BinaryMatrix(mat1)
print(leftmost_column_with_one(binaryMatrix1))  # Output: 0

mat2 = [[0,0],[0,1]]
binaryMatrix2 = BinaryMatrix(mat2)
print(leftmost_column_with_one(binaryMatrix2))  # Output: 1

mat3 = [[0,0],[0,0]]
binaryMatrix3 = BinaryMatrix(mat3)
print(leftmost_column_with_one(binaryMatrix3))  # Output: -1
