def findMedianSortedArrays(nums1, nums2):
    if len(nums1) > len(nums2):
        nums1, nums2 = nums2, nums1
    
    m, n = len(nums1), len(nums2)
    imin, imax = 0, m
    half_len = (m + n + 1) // 2
    
    while imin <= imax:
        i = (imin + imax) // 2
        j = half_len - i
        
        max1 = float('-inf') if i == 0 else nums1[i - 1]
        min1 = float('inf') if i == m else nums1[i]
        max2 = float('-inf') if j == 0 else nums2[j - 1]
        min2 = float('inf') if j == n else nums2[j]
        
        if max1 <= min2 and max2 <= min1:
            if (m + n) % 2 == 0:
                return (max(max1, max2) + min(min1, min2)) / 2
            else:
                return max(max1, max2)
        elif max1 > min2:
            imax = i - 1
        else:
            imin = i + 1

    raise ValueError("Input arrays are not sorted properly or invalid input")
nums1 = [1, 3]
nums2 = [2]
print(findMedianSortedArrays(nums1, nums2))  # Output: 2.0

nums1 = [1, 2]
nums2 = [3, 4]
print(findMedianSortedArrays(nums1, nums2))  # Output: 2.5
