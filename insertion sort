def insertion_sort(arr):
    """
    Perform in-place insertion sort on the given list.
    
    :param arr: List of elements to be sorted.
    :return: The sorted list.
    """
    # Iterate from the second element to the end of the array
    for i in range(1, len(arr)):
        key = arr[i]  # The element to be inserted into the sorted portion
        j = i - 1
        
        # Move elements of arr[0..i-1] that are greater than key
        # to one position ahead of their current position
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        
        # Insert the key into its correct position
        arr[j + 1] = key
    
    return arr

# Example usage
example_list1 = [3, 1, 2, 3, 2, 1]
sorted_list1 = insertion_sort(example_list1)
print("Sorted List 1:", sorted_list1)

example_list2 = [10, 7, 3, 7, 2, 6, 2]
sorted_list2 = insertion_sort(example_list2)
print("Sorted List 2:", sorted_list2)

example_list3 = [9, 1, 5, 3, 1, 6]
sorted_list3 = insertion_sort(example_list3)
print("Sorted List 3:", sorted_list3)
