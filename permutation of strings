def bubble_sort(s):
    s = list(s)
    n = len(s)
    for i in range(n):
        for j in range(0, n-i-1):
            if s[j] > s[j+1]:
                s[j], s[j+1] = s[j+1], s[j]
    return ''.join(s)

def can_break(s1, s2):
    sorted_s1 = bubble_sort(s1)
    sorted_s2 = bubble_sort(s2)
    
    def can_break_helper(a, b):
        return all(x >= y for x, y in zip(a, b))
    
    return can_break_helper(sorted_s1, sorted_s2) or can_break_helper(sorted_s2, sorted_s1)

s1 = "abc"
s2 = "bcd"
if can_break(s1, s2):
    print(f"A permutation of '{s1}' can break a permutation of '{s2}' or vice versa.")
else:
    print(f"No permutation of '{s1}' can break a permutation of '{s2}' or vice versa.")
